from aiogram import Router, html, Bot, types
from aiogram.filters import CommandObject
from aiogram.utils.markdown import hide_link
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
# from aiogram.dispatcher.filters import Text

user_router = Router()


@user_router.message(commands=["start"])
async def user_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–° –ø—é—Ä–µ—à–∫–æ–π"),
            types.KeyboardButton(text="–ë–µ–∑ –ø—é—Ä–µ—à–∫–∏")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏"
    )
    await message.answer("–ö–∞–∫ –ø–æ–¥–∞–≤–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã?", reply_markup=keyboard)


# @user_router.message(Text(text="–° –ø—é—Ä–µ—à–∫–æ–π"))
# async def with_puree(message: types.Message):
#     await message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=types.ReplyKeyboardRemove())
#
#
# @user_router.message(lambda message: message.text == "–ë–µ–∑ –ø—é—Ä–µ—à–∫–∏")
# async def without_puree(message: types.Message):
#     await message.reply("–¢–∞–∫ –Ω–µ–≤–∫—É—Å–Ω–æ!", reply_markup=types.ReplyKeyboardRemove())


@user_router.message(commands=["special_buttons"]) # —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω–ø–∫–∏ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π, –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω–æ–π
async def cmd_special_buttons(message: types.Message):
    builder = ReplyKeyboardBuilder()
    # –º–µ—Ç–æ–¥ row –ø–æ–∑–≤–æ–ª—è–µ—Ç —è–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä—è–¥
    # –∏–∑ –æ–¥–Ω–æ–π –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤—ã–π —Ä—è–¥
    # –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫...
    builder.row(
        types.KeyboardButton(text="–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True),
        types.KeyboardButton(text="–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
    )
    # ... –∞ –≤—Ç–æ—Ä–æ–π –∏–∑ –æ–¥–Ω–æ–π
    builder.row(types.KeyboardButton(
        text="–°–æ–∑–¥–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É",
        request_poll=types.KeyboardButtonPollType(type="quiz"))
    )
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup(resize_keyboard=True),
    )


@user_router.message(commands=["inline_url"]) # –ò–Ω–ª–∞–π–Ω –∫–æ–Ω–ø–∫–∏ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –ø–æ —Å—Å—ã–ª–∫–µ
async def cmd_inline_url(message: types.Message, bot: Bot):
    # –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞—Ç—å URL-–∫–Ω–æ–ø–∫—É —Å ID —é–∑–µ—Ä–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Ñ–æ—Ä–≤–∞—Ä–¥—É,
    # –±–æ—Ç –ø–æ–ª—É—á–∏—Ç –æ—à–∏–±–∫—É Bad Request: BUTTON_USER_PRIVACY_RESTRICTED.
    # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∞–∫—É—é –∫–Ω–æ–ø–∫—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã—è—Å–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø–æ–º—è–Ω—É—Ç–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
    # –î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ getChat –∏ –≤ –æ—Ç–≤–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—è has_private_forwards.
    # –ï—Å–ª–∏ –æ–Ω–æ —Ä–∞–≤–Ω–æ True, –∑–Ω–∞—á–∏—Ç, –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å URL-ID –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –æ—à–∏–±–∫–µ.
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="GitHub", url="https://github.com")
    )
    builder.row(types.InlineKeyboardButton(
        text="–û—Ñ. –∫–∞–Ω–∞–ª Telegram",
        url="tg://resolve?domain=telegram")
    )

    # –ß—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞—Ç—å ID-–∫–Ω–æ–ø–∫—É,
    # –£ —é–∑–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å False —Ñ–ª–∞–≥ has_private_forwards
    user_id = 1234567890
    chat_info = await bot.get_chat(user_id)
    if not chat_info.has_private_forwards:
        builder.row(types.InlineKeyboardButton(
            text="–ö–∞–∫–æ–π-—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            url=f"tg://user?id={user_id}")
        )

    await message.answer(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Å—ã–ª–∫—É',
        reply_markup=builder.as_markup(),
    )


@user_router.message(commands=["dice"]) # –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


@user_router.message(commands=["name"]) # –æ—Ç–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É –æ—Ç –∫–æ–º–∞–Ω–¥—ã
async def cmd_name(message: types.Message, command: CommandObject):
    if command.args:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {html.bold(html.quote(command.args))}")
    else:
        await message.answer(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ—ë –∏–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /name!")


@user_router.message(content_types="text") # –≤—ã—á–ª–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É, –∏–º–µ–π–ª, –ø–∞—Ä–æ–ª—å(—Å—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è Monospace) –∏–∑ —Å—Ç—Ä–æ–∫–∏
async def extract_data(message: types.Message):
    data = {
        "url": "<N/A>",
        "email": "<N/A>",
        "code": "<N/A>"
    }
    entities = message.entities or []
    for item in entities:
        if item.type in data.keys():
            data[item.type] = item.extract_from(message.text)
    await message.reply(
        "–í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª:\n"
        f"URL: {html.quote(data['url'])}\n"
        f"E-mail: {html.quote(data['email'])}\n"
        f"–ü–∞—Ä–æ–ª—å: {html.quote(data['code'])}"
    )


@user_router.message(content_types=[types.ContentType.ANIMATION]) # –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—é
async def echo_gif(message: types.Message):
    await message.reply_animation(message.animation.file_id)


@user_router.message(content_types="photo") # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∫ —Å–µ–±–µ –Ω–∞ –ø–∫ –Ω–µ –±–æ–ª–µ–µ 20–º–± (Telegram Client API - Telethon - –µ—Å–ª–∏ –±–æ–ª–µ–µ 20–º–±)
async def download_photo(message: types.Message, bot: Bot):
    await bot.download(
        message.photo[-1],
        destination=f"/Programming_Learning/Mail_bot/temp/photo/{message.photo[-1].file_id}.jpg"
    )
    await message.answer(f"–ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")


@user_router.message(content_types=types.ContentType.STICKER) # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∏–∫–µ—Ä –∫ —Å–µ–±–µ –Ω–∞ –ø–∫ –Ω–µ –±–æ–ª–µ–µ 20–º–±
async def download_sticker(message: types.Message, bot: Bot):
    await bot.download(
        message.sticker,
        destination=f"/Programming_Learning/Mail_bot/temp/stickers/{message.sticker.file_id}.webp"
    )
    await message.answer(f"–°—Ç–∏–∫–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω")


@user_router.message(commands=["hidden_link"]) # —Å–ø—Ä—è—Ç–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–∫—É
async def cmd_hidden_link(message: types.Message):
    await message.answer(
        f"{hide_link('https://telegra.ph/file/562a512448876923e28c3.png')}"
        f"–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Telegram: *—Å—É—â–µ—Å—Ç–≤—É–µ—Ç*\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: *–Ω–µ —á–∏—Ç–∞—é—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é*\n"
        f"–ì—Ä—É—à–∞:"
    )
